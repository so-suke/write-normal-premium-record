{"version":3,"sources":["App.tsx","const/index.ts","reportWebVitals.ts","index.tsx"],"names":["PLAY_TYPE","WRITE_STATUS","App","useState","storeName","setStoreName","playRateMoneyAmount","setPlayRateMoneyAmount","exchangeAmount","setExchangeAmount","remarks","setRemarks","unit","setUnit","writeStatus","setWriteStatus","useEffect","unitResult","playRates","number","playType","$storeNames","key","displayName","map","value","$playRates","playRate","className","htmlFor","onChange","event","target","type","name","onClick","params","URLSearchParams","dateNow","format","Date","append","result","getPlayType","axios","post","then","response","catch","error","alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d999b9f0.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { format } from \"date-fns\";\nimport { SHEET_URL } from \"./const\";\nimport \"./App.scss\";\n\nconst PLAY_TYPE = {\n  patinko: \"パチ\",\n  throttle: \"スロ\",\n};\n\nconst WRITE_STATUS = {\n  running: \"書込中\",\n  complete: \"書込が完了しました\",\n};\n\nfunction App() {\n  const [storeName, setStoreName] = useState(\"\");\n  const [playRateMoneyAmount, setPlayRateMoneyAmount] = useState(\"\");\n  const [exchangeAmount, setExchangeAmount] = useState(\"\");\n  const [remarks, setRemarks] = useState(\"\");\n  const [unit, setUnit] = useState(\"\");\n  const [writeStatus, setWriteStatus] = useState(\"\");\n\n  useEffect(() => {\n    let unitResult = \"\";\n    if (playRateMoneyAmount === \"1\" || playRateMoneyAmount === \"4\") {\n      unitResult = \"玉\";\n    }\n    if (playRateMoneyAmount === \"5\" || playRateMoneyAmount === \"20\") {\n      unitResult = \"枚\";\n    }\n\n    setUnit(unitResult);\n  }, [playRateMoneyAmount]);\n\n  const storeNames = [\n    { key: \"mandoruNakano\", displayName: \"百万ドル\" },\n    { key: \"ntNakano\", displayName: \"ニュー東\" },\n    { key: \"lionNakano\", displayName: \"ライオンズ\" },\n  ];\n\n  const playRates = [\n    {\n      number: 20,\n      playType: PLAY_TYPE.throttle,\n    },\n    {\n      number: 1,\n      playType: PLAY_TYPE.patinko,\n    },\n    {\n      number: 4,\n      playType: PLAY_TYPE.patinko,\n    },\n    {\n      number: 5,\n      playType: PLAY_TYPE.throttle,\n    },\n  ];\n\n  const changeStoreName = (event: any) => {\n    setStoreName(event.target.value);\n  };\n  const changePlayRateMoneyAmount = (event: any) => {\n    setPlayRateMoneyAmount(event.target.value);\n  };\n  const changeExchangeAmount = (event: any) => {\n    setExchangeAmount(event.target.value);\n  };\n  const changeRemarks = (event: any) => {\n    setRemarks(event.target.value);\n  };\n\n  // レートから遊戯タイプを取得\n  const getPlayType = () => {\n    let result = \"\";\n    if (playRateMoneyAmount === \"1\" || playRateMoneyAmount === \"4\") {\n      result = PLAY_TYPE.patinko;\n    }\n    if (playRateMoneyAmount === \"5\" || playRateMoneyAmount === \"20\") {\n      result = PLAY_TYPE.throttle;\n    }\n\n    return result;\n  };\n\n  // シート書込関数\n  const writeRecordToSheet = () => {\n    if (storeName === \"\") {\n      alert(\"店名を選択してください\");\n      return;\n    }\n    if (playRateMoneyAmount === \"\") {\n      alert(\"レートを選択してください\");\n      return;\n    }\n    if (exchangeAmount === \"\") {\n      alert(\"交換数量を入力してください\");\n      return;\n    }\n    const params = new URLSearchParams();\n    // 現在日時を取得\n    const dateNow = format(new Date(), \"yyyy/MM/dd HH:mm\");\n    params.append(\"date\", dateNow);\n    params.append(\"storeName\", storeName);\n    params.append(\"playRate\", playRateMoneyAmount);\n    params.append(\"playType\", getPlayType());\n    params.append(\"exchangeAmount\", exchangeAmount);\n    params.append(\"remarks\", remarks);\n    setWriteStatus(WRITE_STATUS.running);\n    axios\n      .post(SHEET_URL, params)\n      .then((response) => {\n        setWriteStatus(WRITE_STATUS.complete);\n      })\n      .catch((error) => {\n        alert(`エラー${error}`);\n      });\n  };\n\n  const $storeNames = storeNames.map((storeName) => {\n    return (\n      <option key={storeName.key} value={storeName.displayName}>\n        {storeName.displayName}\n      </option>\n    );\n  });\n  const $playRates = playRates.map((playRate) => {\n    return (\n      <option key={playRate.number} value={playRate.number}>\n        {playRate.number}\n        {playRate.playType === PLAY_TYPE.patinko ? \"パチ\" : \"スロ\"}\n      </option>\n    );\n  });\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <p className=\"title\">一般景品記録書込アプリ</p>\n      </header>\n      <main className=\"main\">\n        <div className=\"content\">\n          <label htmlFor=\"\">店名：</label>\n          <select className=\"select\" value={storeName} onChange={changeStoreName}>\n            <option key=\"storeNameDefault\" value=\"\">\n              選択して下さい\n            </option>\n            {$storeNames}\n          </select>\n        </div>\n        <div className=\"content\">\n          <label htmlFor=\"\">金額レート：</label>\n          <select className=\"select\" value={playRateMoneyAmount} onChange={changePlayRateMoneyAmount}>\n            <option key=\"playRateDefault\" value=\"\">\n              選択して下さい\n            </option>\n            {$playRates}\n          </select>\n        </div>\n        <div className=\"content exchangeAmountWrapper\">\n          <label htmlFor=\"\">交換数量：</label>\n          <input className=\"exchangeAmountInput\" type=\"number\" name=\"\" value={exchangeAmount} onChange={changeExchangeAmount} />\n          <span>{unit}</span>\n        </div>\n        <div className=\"content\">\n          <label htmlFor=\"\">備考：</label>\n          <textarea name=\"\" value={remarks} onChange={changeRemarks} />\n          <span>{unit}</span>\n        </div>\n        <button className=\"writeBtn\" onClick={writeRecordToSheet}>\n          書込\n        </button>\n        <p className=\"writeStatus\">{writeStatus}</p>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","export const SHEET_URL = 'https://script.google.com/macros/s/AKfycbyOLpT3YN9KyTnRebVDcLhblgzL1rxaVxmszOdINcIyi11U5iqWdATKFfQombiyOqsM/exec'","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}